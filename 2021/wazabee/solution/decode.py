symbols = {
	"0000" : "1100000011101111010111001101100",
	"1000" : "1001110000001110111101011100110",
	"0100" : "0101100111000000111011110101110",
	"1100" : "0100110110011100000011101111010",
	"0010" : "1101110011011001110000001110111",
	"1010" : "0111010111001101100111000000111",
	"0110" : "1110111101011100110110011100000",
	"1110" : "0000111011110101110011011001110",
	"0001" : "0011111100010000101000110010011",
	"1001" : "0110001111110001000010100011001",
	"0101" : "1010011000111111000100001010001",
	"1101" : "1011001001100011111100010000101",
	"0011" : "0010001100100110001111110001000",
	"1011" : "1000101000110010011000111111000",
	"0111" : "0001000010100011001001100011111",
	"1111" : "1111000100001010001100100110001"
}

corrected_symbols = {}
for k,v in symbols.items():
	symbols[k] = v+"0"
	corrected_symbols[k] = bytes.fromhex("".join(["{:02x}".format(int(symbols[k][i:i+8][::-1],2)) for i in range(0,len(symbols[k]),8)]))

print(corrected_symbols)

def find_symbol(table,value):
	for k,v in table.items():
		if value == v:
			return k
data = ""
ch = bytes.fromhex("03f73a1b03f73a1b03f73a1b03f73a1b03f73a1b03f73a1b03f73a1b03f73a1b70afb33965fc08453b9b03773970af3303f73a1b70afb339fc08c564f73a9b0303f73a1bb239702f70afb33970afb33908c5647cf73a9b034dc68f5070afb339c68f504cb239702f514cc60fb239702f4dc68f50f73a9b0303f73a1b70afb339c464fc08aeb33970b239702ff73a9b03f73a9b0370afb33965fc0845aeb33970c464fc0870afb33970afb33970afb339aeb33970aeb33970514cc60f70afb33903f73a1bc68f504c70afb3393970af33")
for i in range(0,len(ch),4):
	data += find_symbol(corrected_symbols,ch[i:i+4])
	
print(bytes(int(data[i : i + 8][::-1], 2) for i in range(0, len(data), 8)))
